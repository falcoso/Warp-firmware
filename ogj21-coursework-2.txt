1.  From the data sheet - MMA8451Q I2C address: 0x1D
    The sensor is initialised in the initMMA8451Q() function, and the I2C
    address needs to be changed from 0x1C to 0x1D.

2.  From the MMA8451Q data sheet (https://www.nxp.com/docs/en/data-sheet/MMA8451Q.pdf)
    The SA0 pin controls the least significant bit on the addressing

3.  TRANSCIPT:

    Booting Warp, in 3... 2... 1...




    [ *				W	a	r	p	(rev. b)			* ]
    [  				      Cambridge / Physcomplab   				  ]

    	Supply=0mV,	Default Target Read Register=0x00
    	I2C=200kb/s,	SPI=200kb/s,	UART=1kb/s,	I2C Pull-Up=32768

    	SIM->SCGC6=0x20000001		RTC->SR=0x10		RTC->TSR=0x56871300
    	MCG_C1=0x42			MCG_C2=0x00		MCG_S=0x06
    	MCG_SC=0x00			MCG_MC=0x00		OSC_CR=0x00
    	SMC_PMPROT=0x22			SMC_PMCTRL=0x40		SCB->SCR=0x00
    	PMC_REGSC=0x00			SIM_SCGC4=0xF0000030	RTC->TPR=0x7E72

    	0s in RTC Handler to-date,	0 Pmgr Errors
    Select:
    - 'a': set default sensor.
    - 'b': set I2C baud rate.
    - 'c': set SPI baud rate.
    - 'd': set UART baud rate.
    - 'e': set default register address.
    - 'f': write byte to sensor.
    - 'g': set default SSSUPPLY.
    - 'h': powerdown command to all sensors.
    - 'i': set pull-up enable value.
    - 'j': repeat read reg 0x00 on sensor #3.
    - 'k': sleep until reset.
    - 'l': send repeated byte on I2C.
    - 'm': send repeated byte on SPI.
    - 'n': enable SSSUPPLY.
    - 'o': disable SSSUPPLY.
    - 'p': switch to VLPR mode.
    - 'r': switch to RUN mode.
    - 's': power up all sensors.
    - 't': dump processor state.
    - 'u': set I2C address.
    - 'x': disable SWD and spin for 10 secs.
    - 'z': dump all sensors data.
    Enter seSelect:> aa
    	- '1' ADXL362			(0x00--0x2D): 1.6V -- 3.5V (compiled out)
    	- '2' BMX055accel 		(0x00--0x3F): 2.4V -- 3.6V (compiled out)
    	- '3' BMX055gyro			(0x00--0x3F): 2.4V -- 3.6V (compiled out)
    	- '4' BMX055mag			(0x40--0x52): 2.4V -- 3.6V (compiled out)
    	- '5' MMA8451Q			(0x00--0x31): 1.95V -- 3.6V
    	- '6' LPS25H			(0x08--0x24): 1.7V -- 3.6V (compiled out)
    	- '7' MAG3110			(0x00--0x11): 1.95V -- 3.6V (compiled out)
    	- '8' HDC1000			(0x00--0x1F): 3.0V -- 5.0V (compiled out)
    	- '9' SI7021			(0x00--0x0F): 1.9V -- 3.6V (compiled out)
    	- 'a' L3GD20H			(0x0F--0x39): 2.2V -- 3.6V (compiled out)
    	- 'b' BME680			(0xAA--0xF8): 1.6V -- 3.6V (compiled out)
    	- 'd' TCS34725			(0x00--0x1D): 2.7V -- 3.3V (compiled out)
    	- 'e' SI4705			(n/a):        2.7V -- 5.5V (compiled out)
    	- 'f' PAN1326			(n/a) (compiled out)
    	- 'g' CCS811			(0x00--0xFF): 1.8V -- 3.6V (compiled out)
    	- 'h' AMG8834			(0x00--?): ?V -- ?V (compiled out)
    	- 'j' AS7262			(0x00--0x2B): 2.7V -- 3.6V (compiled out)
    	- 'k' AS7263			(0x00--0x2B): 2.7V -- 3.6V (compiled out)
    	Enter selection> 55



    [ *				W	a	r	p	(rev. b)	* ]
    [  				      Cambridge / Physcomplab   		  ]

    	Supply=0mV,	Default Target Read Register=0x00
    	I2C=200kb/s,	SPI=200kb/s,	UART=1kb/s,	I2C Pull-Up=32768

    	SIM->SCGC6=0x20000001		RTC->SR=0x10		RTC->TSR=0x56871308
    	MCG_C1=0x42			MCG_C2=0x00		MCG_S=0x06
    	MCG_SC=0x00			MCG_MC=0x00		OSC_CR=0x00
    	SMC_PMPROT=0x22			SMC_PMCTRL=0x40		SCB->SCR=0x00
    	PMC_REGSC=0x00			SIM_SCGC4=0xF0000030	RTC->TPR=0x7F6D

    	0s in RTC Handler to-date,	0 Pmgr Errors
    Select:
    - 'a': set default sensor.
    - 'b': set I2C baud rate.
    - 'c': set SPI baud rate.
    - 'd': set UART baud rate.
    - 'e': set default register address.
    - 'f': write byte to sensor.
    - 'g': set default SSSUPPLY.
    - 'h': powerdown command to all sensors.
    - 'i': set pull-up enable value.
    - 'j': repeat read reg 0x00 on sensor #1.
    - 'k': sleep until reset.
    - 'l': send repeated byte on I2C.
    - 'm': send repeated byte on SPI.
    - 'n': enable SSSUPPLY.
    - 'o': disable SSSUPPLY.
    - 'p': switch to VLPR mode.
    - 'r': switch to RUN mode.
    - 's': power up all sensors.
    - 't': dump processor state.
    - 'u': set I2C address.
    - 'x': disable SWD and spin for 10 secs.
    - 'z': dump all sensors data.
    Enter selection> gg
    	Override SSSUPPLY in mV (e.g., '1800')> 11880000
    	Override SSSUPPLY set to 1800 mV



    [ *				W	a	r	p	(rev. b)			* ]
    [  				      Cambridge / Physcomplab   				  ]

    	Supply=1800mV,	Default Target Read Register=0x00
    	I2C=200kb/s,	SPI=200kb/s,	UART=1kb/s,	I2C Pull-Up=32768

    	SIM->SCGC6=0x20000001		RTC->SR=0x10		RTC->TSR=0x5687130F
    	MCG_C1=0x42			MCG_C2=0x00		MCG_S=0x06
    	MCG_SC=0x00			MCG_MC=0x00		OSC_CR=0x00
    	SMC_PMPROT=0x22			SMC_PMCTRL=0x40		SCB->SCR=0x00
    	PMC_REGSC=0x00			SIM_SCGC4=0xF0000030	RTC->TPR=0x6C18

    	0s in RTC Handler to-date,	0 Pmgr Errors
    Select:
    - 'a': set default sensor.
    - 'b': set I2C baud rate.
    - 'c': set SPI baud rate.
    - 'd': set UART baud rate.
    - 'e': set default register address.
    - 'f': write byte to sensor.
    - 'g': set default SSSUPPLY.
    - 'h': powerdown command to all sensors.
    - 'i': set pull-up enable value.
    - 'j': repeat read reg 0x00 on sensor #1.
    - 'k': sleep until reset.
    - 'l': send repeated byte on I2C.
    - 'm': send repeated byte on SPI.
    - 'n': enable SSSUPPLY.
    - 'o': disable SSSUPPLY.
    - 'p': switch to VLPR mode.
    - 'r': switch to RUN mode.
    - 's': power up all sensors.
    - 't': dump processor state.
    - 'u': set I2C address.
    - 'x': disable SWD and spin for 10 secs.
    - 'z': dump all sensors data.
    Enter selection> jj
    	Auto-increment from base address 0x00? ['0' | '1']> 11
    	Chunk reads per address (e.g., '1')> 11
    	Chatty? ['0' | '1']> 11
    	Inter-operation spin delay in milliseconds (e.g., '0000')> 00000000
    	Repetitions per address (e.g., '0000')> 00000000
    	Maximum voltage for adaptive supply (e.g., '0000')> 22000000
    	Reference byte for comparisons (e.g., '3e')> 0000
    	Repeating dev1 @ 0x00, reps=0, pull=32768, delay=0ms:


    MMA8451Q:
    	0x00 --> 0x00
    	0x01 --> 0x02
    	0x02 --> 0xE0
    	0x03 --> 0x81
    	0x04 --> 0xAC
    	0x05 --> 0xFB
    	0x06 --> 0x18
    	0x09 --> 0x00
    	0x0A --> 0x00
    	0x0B --> 0x00
    	0x0C --> 0x00
    	0x0D --> 0x1A
    	0x0E --> 0x00
    	0x0F --> 0x00
    	0x10 --> 0x00
    	0x11 --> 0x80
    	0x12 --> 0x00
    	0x13 --> 0x44
    	0x14 --> 0x84
    	0x15 --> 0x00
    	0x16 --> 0x00
    	0x17 --> 0x00
    	0x18 --> 0x00
    	0x1D --> 0x00
    	0x1E --> 0x00
    	0x1F --> 0x00
    	0x20 --> 0x00
    	0x21 --> 0x00
    	0x22 --> 0x00
    	0x23 --> 0x00
    	0x24 --> 0x00
    	0x25 --> 0x00
    	0x26 --> 0x00
    	0x27 --> 0x00
    	0x28 --> 0x00
    	0x29 --> 0x00
    	0x2A --> 0x00
    	0x2B --> 0x00
    	0x2C --> 0x00
    	0x2D --> 0x00
    	0x2E --> 0x00
    	0x2F --> 0x00
    	0x30 --> 0x00
    	0x31 --> 0x00

    	44/44 success rate.
    	34/44 successes matched ref. value of 0x00.
    	6 bad commands.

4.  SPI MOSI:
        PTA7/ IRQ_4
        PTA8

    SPI MISO:
        PTA6
        PTB11
        PTA7/ IRQ_4

    SPI SCK:
        PTB0/ IRQ_5/ LLWU_P4
        PTA9

5.  SPI MISO: PTA6
    SPI MOSI: PTA7
    SPI SCK:  PTB0/IRQ_5/LLWU_P4

6.  See attached picture. Wiring not changed from original firmware code.

7.  See .map file attached found in:
    Warp-firmware/build/ksdk1.1/work/demos/Warp/armgcc/Warp/release/Warp.map

8.  See .srec file attached found in:
    Warp-firmware/build/ksdk1.1/work/demos/Warp/armgcc/Warp/release/Warp.srec

    ISEG = Contrast / 256 x IREF x scale factor (from p23 of Data Sheet)

    Therefore Contrast and scale factor need to be max. To achieved a full
    screen at max brightness the following commands were used:

    - Screen filled using Draw Rect command with Green Border and Green fill
    - Master Current Control set to 0x0F (max scale factor, though this is the
      default anyway)
    - Set contrast for Colour B set to 0xFF (max contrast as default is 0x80).

    achieved through adding teh following to devSSD1331.c:

        writeCommand(kSSD1331CommandMASTERCURRENT);
        writeCommand(0x0F);

        writeCommand(kSSD1331CommandCONTRASTB);
        writeCommand(0xFF);

        writeCommand(kSSD1331CommandDRAWRECT);
        writeCommand(0x00); //top right pixel
        writeCommand(0x00); //top right pixel
        writeCommand(0x5F); //bottom left pixel
        writeCommand(0x3F); //bottom left pixel
        writeCommand(0x00);
        writeCommand(0x3F); //max green border
        writeCommand(0x00);
        writeCommand(0x00);
        writeCommand(0x3F); //max green fill
        writeCommand(0x00);

    SSD1331 is initialised in line 1349 of the warp-kl03-ksdk1.1-boot.c.

    Following lines added to CMakeLists.txt:
    "${ProjDirPath}/../../src/devSSD1331.c"
    "${ProjDirPath}/../../src/devSSD1331.h"

    Following lines added to build.sh:
	cp ../../src/boot/ksdk1.1.0/devSSD1331.*			work/demos/Warp/src/
